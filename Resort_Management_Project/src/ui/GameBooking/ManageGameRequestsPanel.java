/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.GameBooking;

import Business.EcoSystem;
import Business.Email.EmailNotification;
import Business.TransactionHistory.CustomerTransaction;
import Business.User.User;
import Business.WorkRequest.GameWorkRequest;
import Business.WorkRequest.VehicleWorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author siddh
 */
public class ManageGameRequestsPanel extends javax.swing.JPanel {
     EcoSystem system;

    /**
     * Creates new form ManageGameRequestsPanel
     */
    public ManageGameRequestsPanel(EcoSystem system) {
        initComponents();
        
        this.system = system;
        populateGameRequestTable();
    }
    
    public void populateGameRequestTable() {
        ArrayList<GameWorkRequest> pendingGameRequest = new ArrayList<GameWorkRequest>();
        ArrayList<GameWorkRequest> non_pendingGameRequest = new ArrayList<GameWorkRequest>();

        for (GameWorkRequest gameWRequest : system.getGameWorkRequestDirectory().getGameWorkRequestList()) {
            if (gameWRequest.getStatus().equals("Pending")) {
                pendingGameRequest.add(gameWRequest);
            } else {
                non_pendingGameRequest.add(gameWRequest);
            }
        }

        populate_based_on_status(pendingGameRequest, non_pendingGameRequest);
    }

    public void populate_based_on_status(ArrayList<GameWorkRequest> pendingGameRequest, ArrayList<GameWorkRequest> non_pendingGameRequest) {
        DefaultTableModel model = (DefaultTableModel) tblGameRequests.getModel();
        model.setRowCount(0);
        for (GameWorkRequest gameWRequest : pendingGameRequest) {

            Object[] newRow = new Object[7];
            newRow[0] = gameWRequest;
            newRow[1] = gameWRequest.getGameDetails().getGameName();
            newRow[2] = gameWRequest.getGameDetails().getGameCategory();
            newRow[3] = gameWRequest.getGameDetails().getPrice();
            newRow[4] = gameWRequest.getNumberOfHours();
            newRow[5] = gameWRequest.getBookingDate();
            newRow[6] = gameWRequest.getStatus();

            model.addRow(newRow);
        }

        DefaultTableModel modelNon_Pending = (DefaultTableModel) tblGameConfirmed.getModel();
        modelNon_Pending.setRowCount(0);
        for (GameWorkRequest gameWRequest : non_pendingGameRequest) {

            Object[] newRow = new Object[7];
            newRow[0] = gameWRequest;
            newRow[1] = gameWRequest.getGameDetails().getGameName();
            newRow[2] = gameWRequest.getGameDetails().getGameCategory();
            newRow[3] = gameWRequest.getGameDetails().getPrice();
            newRow[4] = gameWRequest.getNumberOfHours();
            newRow[5] = gameWRequest.getBookingDate();
            newRow[6] = gameWRequest.getStatus();

            modelNon_Pending.addRow(newRow);
        }

    }
    
    public void updateWorkRequestStatus(GameWorkRequest selectedGame, String status) {
        selectedGame.setStatus(status);
        int index = 0;
        for (GameWorkRequest gameWRequest : system.getGameWorkRequestDirectory().getGameWorkRequestList()) {
            if (gameWRequest.getUserId().equals(selectedGame.getUserId())) {
                system.getGameWorkRequestDirectory().updateGameWorkRequest(gameWRequest, index);
                break;
            }
            index++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGameRequests = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGameConfirmed = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();

        jLabel1.setText("MANAGE REQUESTS");

        tblGameRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Game Name", "Category", "Price per hour($)", "No. of Hours", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblGameRequests);

        tblGameConfirmed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Game Name", "Category", "Price per hour($)", "No. of Hours", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblGameConfirmed);

        btnApprove.setText("APPROVE");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnReject.setText("REJECT");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApprove)
                .addGap(206, 206, 206)
                .addComponent(btnReject)
                .addGap(316, 316, 316))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApprove)
                    .addComponent(btnReject))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
         try {
            int selectedRowIndex = tblGameRequests.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to approve.");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblGameRequests.getModel();
            GameWorkRequest selectedGameWorkRequest = (GameWorkRequest) model.getValueAt(selectedRowIndex, 0);
            updateWorkRequestStatus(selectedGameWorkRequest, "Approved");
            CustomerTransaction ct = new CustomerTransaction();
            
            //User definition for email notif
            User getUser = system.getUserDirectory().getUserById(selectedGameWorkRequest.getUserId());

            float gamebooking_finalprice = selectedGameWorkRequest.getNumberOfHours() * selectedGameWorkRequest.getGameDetails().getPrice();
            ct.setUserId(selectedGameWorkRequest.getUserId());
            ct.setFacilityUsed("Game Booked - " + selectedGameWorkRequest.getGameDetails().getGameName() + " for " + selectedGameWorkRequest.getNumberOfHours() + " hours");
            ct.setPrice(gamebooking_finalprice);
            system.getCustomerTransactionDirectory().addCustomerTransaction(ct);
            
             //email notification
            new EmailNotification().SendEmailOfNotification(getUser, "Game");
            
            JOptionPane.showMessageDialog(this, "Request approved successfully and email notification sent");
            populateGameRequestTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
         try {
            int selectedRowIndex = tblGameRequests.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to approve.");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblGameRequests.getModel();
            GameWorkRequest selectedGameWorkRequest = (GameWorkRequest) model.getValueAt(selectedRowIndex, 0);
            updateWorkRequestStatus(selectedGameWorkRequest, "Rejected");
            JOptionPane.showMessageDialog(this, "Request rejected successfully");
            populateGameRequestTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblGameConfirmed;
    private javax.swing.JTable tblGameRequests;
    // End of variables declaration//GEN-END:variables
}
