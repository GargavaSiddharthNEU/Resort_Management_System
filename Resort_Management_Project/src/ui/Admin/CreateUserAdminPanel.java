/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import Business.EcoSystem;
import Business.User.User;
import java.util.ArrayList;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Subbu
 */
public class CreateUserAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRolesPanel
     */
    EcoSystem system;

    public CreateUserAdminPanel(EcoSystem system) {
        initComponents();
        this.system = system;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtAge = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtFName = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtLName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbRole = new javax.swing.JComboBox<>();
        createUserBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jLabel2.setText("User Name");

        jLabel14.setText("Email Address");

        jLabel3.setText("Last Name");

        jLabel4.setText("Password");

        jLabel5.setText("Roletype");

        jLabel1.setText("First Name");

        jLabel8.setText("Address");

        jLabel10.setText("Age");

        jLabel11.setText("Phone Number");

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vehicle Contractor", "Pool Incharge", "Gaming Incharge", "Janitor", "Food Manager", "Laundry Manager", "Souvenir Shop Manager" }));

        createUserBtn.setText("Create New User");
        createUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Create User Role");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(461, 461, 461)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createUserBtn)
                        .addGap(397, 397, 397))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel14))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUserName)
                            .addComponent(txtLName)
                            .addComponent(txtPassword)
                            .addComponent(txtAddress)
                            .addComponent(txtPhoneNumber)
                            .addComponent(cmbRole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAge)
                            .addComponent(txtFName)
                            .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(276, 276, 276))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel6)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(createUserBtn)
                .addContainerGap(194, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserBtnActionPerformed
        // TODO add your handling code here:

        try {
            User user = new User();

            UUID uuid = UUID.randomUUID();
            String randomUUIDString = uuid.toString();

            String firstName = txtFName.getText();
            String lastName = txtLName.getText();
            String userName = txtUserName.getText();
            String password = txtPassword.getText();
            String address = txtAddress.getText();
            String age = txtAge.getText();
            String phoneNumber = txtPhoneNumber.getText();
            String userId = randomUUIDString;
            String roleType = (String) cmbRole.getSelectedItem();
            String emailAddress = txtEmailAddress.getText();

            if (firstName.isEmpty() || lastName.isEmpty() || userName.isEmpty() || password.isEmpty()
                    || phoneNumber.isEmpty() || userId.isEmpty() || age.isEmpty() || address.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter all details !");
                return;
            }

            if (validatePhoneNumber(phoneNumber) == null) {
                JOptionPane.showMessageDialog(this, "Please enter a valid phone number !");
                return;
            }

            if (validateEmailAddress(emailAddress) == null) {
                JOptionPane.showMessageDialog(this, "Please enter a valid email address !");
                return;
            }

            if (validateAge(age) == null) {
                JOptionPane.showMessageDialog(this, "Please enter a valid age!");
                return;
            }

            for (User p : system.getUserDirectory().getUsers()) {
                if (userName.equals(p.getUserName())) {
                    JOptionPane.showMessageDialog(this, "Username already in use!");
                    return;
                }
            }
            Integer a = validateAge(age);
            Long pn = validatePhoneNumber(phoneNumber);

            user.setFirstName(firstName);
            user.setLastName(lastName);
            user.setUserName(userName);
            user.setPassword(password);
            user.setRoleType(roleType);
            user.setAge(a);
            user.setPhoneNumber(pn);
            user.setEmailId(emailAddress);
            user.setUserId(userId);

            ArrayList<User> users = system.getUserDirectory().getUsers();
            users.add(user);
            system.getUserDirectory().setUsers(users);

            JOptionPane.showMessageDialog(this, "User successfully created!");
            clearAllFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Enter valid values for adding an user");
        }
    }//GEN-LAST:event_createUserBtnActionPerformed

    private Integer validateAge(String age) {
        try {
            return Integer.parseInt(age);
        } catch (NumberFormatException e) {
            System.out.println(e.getMessage());
            return null;
        }
    }

    private Long validatePhoneNumber(String phoneNumber) {
        try {

            String cellPhoneNumberRegex = "^\\d{10}$";

            Pattern cellPhoneNumberPattern = Pattern.compile(cellPhoneNumberRegex);
            Matcher cellPhoneNumberMatcher = cellPhoneNumberPattern.matcher(phoneNumber);

            if (cellPhoneNumberMatcher.matches()) {
                return Long.parseLong(phoneNumber);
            } else {
                //JOptionPane.showMessageDialog(this, "Invalid Phone Number!");
                return null;
            }
        } catch (NumberFormatException e) {
            System.out.println(e.getMessage());
            return null;
        }

    }

    private void clearAllFields() {
        txtAge.setText("");
        txtFName.setText("");
        txtLName.setText("");
        txtPassword.setText("");
        txtPhoneNumber.setText("");
        txtAddress.setText("");
        txtUserName.setText("");
        txtEmailAddress.setText("");
    }

    private String validateEmailAddress(String emailAddress) {
        try {

            String emailAddressRegex = "^(.+)@(\\S+)$";

            Pattern emailPattern = Pattern.compile(emailAddressRegex);
            Matcher emailMatcher = emailPattern.matcher(txtEmailAddress.getText());

            if (emailMatcher.matches()) {
                return emailAddress;
            } else {
//                JOptionPane.showMessageDialog(this, "Invalid Email Address!");
                return null;
            }
        } catch (NumberFormatException e) {
            System.out.println(e.getMessage());
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JButton createUserBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
